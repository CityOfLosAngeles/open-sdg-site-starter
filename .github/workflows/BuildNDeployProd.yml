
name: Build and Deploy Production Static Site Prod # run this workflow when a push has been made to production branch

on: # run this workflow when a push has been made to `Jekyll-Alf` branch
  push:
    branches:
      - production
  repository_dispatch: # Listen for repository dispatch event from open-sdg-data-starter workflow
    types: [prod_triggered_from_open-sdg-data-starter]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment:
      name: production
      url: https://${{ vars.SITE_DOMAIN_NAME }}
    steps:   
 ###########################################################################################################
 #      This is the CI portion
 ###########################################################################################################
        - name: Checkout repo
          uses: actions/checkout@v4
          with:
            ref: production
        
        - name: Setup Ruby
          uses: actions/setup-ruby@v1
          with:
            ruby-version: '3.2' # Version range or exact version of a Ruby version to use, using semvers version range syntax.
        
        - name: Install Ruby dependencies
          run: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
          
        - name: Install Jekyll and Build
          run: bundle exec jekyll build --config _config.yml,_config_prod.yml

        - name: Test the HTML # test our rendered html files
          run: bash scripts/test/html_proofer_prod.sh
          
 ###########################################################################################################
 #      This is the CD portion
 ###########################################################################################################       

        - name: Install AWS CLI
          run: pip3 install awscli --upgrade --user # install the cli with upgrade to any requirements and into the subdir of the user
          
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4 # use the official GitHub Action from AWS to setup credentials
          with:
            role-to-assume: ${{ secrets.ROLE_ARN }}
            aws-region: ${{ secrets.AWS_REGION }}
            mask-aws-account-id: true
        
        - name: Push Contents to S3 # push the current working directory to the S3 bucket
          run: aws s3 sync _site/ s3://${{ secrets.S3_BUCKET_NAME }} --exclude ".git/*" --exclude ".github/*" --delete # have the bucket have the same content in the repo & exclude the git related directories.
        
        - name: Invalidate CloudFront Cache # Invalidate the CloudFront Distribution Cache to get contents from the S3 bucket
          run: aws cloudfront create-invalidation --distribution-id "$CDN_DISTRIBUTION_ID" --paths "/*"
