# This workflow will checkout the contents of the `development` branch of this repo, remove all files in the current S3 bucket, and push the contents
# to the bucket. Once the contents of the S3 bucket has been updated, a call will be made to invalidate the cache in the CloudFront distribution.
# The CloudFront distribution is configured to pull the contents from the S3 bucket once an `invalidation` request is sent.

name: Build and Deploy Development Static Site 

on: # run this workflow when a push has been made to `development` branch
  push:
    branches:
      - ghi-23 # development
  repository_dispatch: # Listen for repository dispatch event from open-sdg-data-starter workflow
    types: [dev_triggered_from_open-sdg-data-starter]

jobs:
  deploy:
    runs-on: ubuntu-20.04
    environment:
      name: development
      url: https://${{ vars.SITE_DOMAIN_NAME }}
    steps:   
 ###########################################################################################################
 #      This is the CI portion
 ###########################################################################################################
        - name: Checkout repo
          uses: actions/checkout@v3
          with:
            ref: development
        
        - name: Setup Ruby
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: '3.2' # Version range or exact version of a Ruby version to use, using semvers version range syntax.
       

        - name: Cache and Install Gem files
          uses: actions/cache@v3
          with:
            path: vendor/bundle
            key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-gems-
        
        - name: Install Ruby dependencies
          run: bundle config set --local path 'vendor/bundle         
          
        - name: Install Jekyll and Build
          run: bundle exec jekyll build --config _config.yml

        - name: Test the HTML # test our rendered html files
          run: bash scripts/test/html_proofer.sh
          
 ###########################################################################################################
 #      This is the CD portion
 ###########################################################################################################       
          
        #- uses: actions/checkout@v1 # checks out the code in the repository
        - name: Setup Python
          uses: actions/setup-python@v4 # sets up python in our environment
          with:
            python-version: '3.x' # install python version 3.x, default architecture is x64
            
        
        - name: Install AWS CLI
          run: pip3 install awscli --upgrade --user # install the cli with upgrade to any requirements and into the subdir of the user
          
          
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1-node16 # use the official GitHub Action from AWS to setup credentials
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
            mask-aws-account-id: true
        
    
        - name: Push Contents to S3 # push the current working directory to the S3 bucket
          run: aws s3 sync _site/ s3://${{ secrets.S3_BUCKET_NAME }} --exclude ".git/*" --exclude ".github/*" --delete # have the bucket have the same content in the repo & exclude the git related directories.
        
    
        - name: Invalidate CloudFront Cache # Invalidate the CloudFront Distribution Cache to get contents from the S3 bucket
          run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CDN_DISTRIBUTION_ID }} --paths "/*"
              
          
          
